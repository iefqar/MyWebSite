// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechPartsWebSite.Data;

#nullable disable

namespace TechPartsWebSite.Migrations
{
    [DbContext(typeof(dariodbContext))]
    [Migration("20220924231803_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("latin1_swedish_ci")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "latin1");

            modelBuilder.Entity("TechPartsWebSite.Entities.StkExistencium", b =>
                {
                    b.Property<string>("Deposito")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("deposito")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Item")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item")
                        .HasDefaultValueSql("''");

                    b.Property<decimal?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("cantidad")
                        .HasDefaultValueSql("'0.0000'");

                    b.Property<decimal?>("Comprometido")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("comprometido")
                        .HasDefaultValueSql("'0.0000'");

                    b.Property<decimal?>("Produccion")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(14, 4)
                        .HasColumnType("decimal(14,4)")
                        .HasColumnName("produccion")
                        .HasDefaultValueSql("'0.0000'");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("ubicacion");

                    b.HasKey("Deposito", "Item")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Item" }, "item");

                    b.ToTable("stk_existencia", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkFamilium", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<string>("MasterEspecif")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("master_especif");

                    b.Property<string>("MasterFormula")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("master_formula");

                    b.Property<string>("MasterProceso")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("master_proceso");

                    b.Property<string>("MasterReceta")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("master_receta");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.HasKey("Id");

                    b.ToTable("stk_familia", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkFormula", b =>
                {
                    b.Property<string>("Item")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Componente")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("componente")
                        .HasDefaultValueSql("''");

                    b.Property<decimal?>("CantidadComp")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)")
                        .HasColumnName("cantidad_comp")
                        .HasDefaultValueSql("'1.00000000'");

                    b.Property<decimal?>("CantidadItem")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)")
                        .HasColumnName("cantidad_item")
                        .HasDefaultValueSql("'1.00000000'");

                    b.HasKey("Item", "Componente")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Componente" }, "componente");

                    b.ToTable("stk_formula", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkGrupo", b =>
                {
                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.HasKey("Grupo")
                        .HasName("PRIMARY");

                    b.ToTable("stk_grupo", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkItem", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Auxiliar1Cmp")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar1_cmp");

                    b.Property<string>("Auxiliar1Vta")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar1_vta");

                    b.Property<string>("Auxiliar2Cmp")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar2_cmp");

                    b.Property<string>("Auxiliar2Vta")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar2_vta");

                    b.Property<string>("Auxiliar3Cmp")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar3_cmp");

                    b.Property<string>("Auxiliar3Vta")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("auxiliar3_vta");

                    b.Property<string>("Barcode")
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("barcode");

                    b.Property<bool?>("Compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("compra")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Decimales")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales");

                    b.Property<int?>("Decimales1Cmp")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales1_cmp");

                    b.Property<int?>("Decimales1Vta")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales1_vta");

                    b.Property<int?>("Decimales2Cmp")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales2_cmp");

                    b.Property<int?>("Decimales2Vta")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales2_vta");

                    b.Property<int?>("Decimales3Cmp")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales3_cmp");

                    b.Property<int?>("Decimales3Vta")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales3_vta");

                    b.Property<int?>("DecimalesCmp")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales_cmp");

                    b.Property<int?>("DecimalesVta")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales_vta");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<decimal?>("FactorCmp")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)")
                        .HasColumnName("factor_cmp");

                    b.Property<decimal?>("FactorVta")
                        .HasPrecision(16, 8)
                        .HasColumnType("decimal(16,8)")
                        .HasColumnName("factor_vta");

                    b.Property<string>("Familia")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("familia");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("blob")
                        .HasColumnName("foto");

                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<string>("ItemMatrix")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("item_matrix");

                    b.Property<string>("Master")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("master");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<decimal?>("Peso")
                        .HasPrecision(9, 4)
                        .HasColumnType("decimal(9,4)")
                        .HasColumnName("peso");

                    b.Property<string>("Presentacion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("presentacion");

                    b.Property<string>("Rubro")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rubro");

                    b.Property<bool?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("stock")
                        .HasDefaultValueSql("'1'");

                    b.Property<decimal?>("StockMinimo")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("stock_minimo")
                        .HasDefaultValueSql("'0.00'");

                    b.Property<string>("Subgrupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("subgrupo");

                    b.Property<string>("Tipo")
                        .HasColumnType("enum('PT','SE','MP','CP','S','F')")
                        .HasColumnName("tipo");

                    b.Property<string>("Unidad")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad");

                    b.Property<string>("Unidad1Cmp")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad1_cmp");

                    b.Property<string>("Unidad1Vta")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad1_vta");

                    b.Property<string>("Unidad2Cmp")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad2_cmp");

                    b.Property<string>("Unidad2Vta")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad2_vta");

                    b.Property<string>("Unidad3Cmp")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad3_cmp");

                    b.Property<string>("Unidad3Vta")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad3_vta");

                    b.Property<string>("UnidadCmp")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("unidad_cmp");

                    b.Property<string>("UnidadFex")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad_fex");

                    b.Property<string>("UnidadMatrix")
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)")
                        .HasColumnName("unidad_matrix");

                    b.Property<string>("UnidadVta")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("unidad_vta");

                    b.Property<DateOnly?>("Vencimiento")
                        .HasColumnType("date")
                        .HasColumnName("vencimiento");

                    b.Property<bool?>("Venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("venta")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("VtoMeses")
                        .HasColumnType("int(11)")
                        .HasColumnName("vto_meses");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Familia" }, "familia");

                    b.HasIndex(new[] { "Grupo" }, "grupo");

                    b.HasIndex(new[] { "Orden", "Id" }, "orden_index_stk_item");

                    b.HasIndex(new[] { "Rubro" }, "rubro");

                    b.HasIndex(new[] { "Subgrupo" }, "subgrupo");

                    b.ToTable("stk_item", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkListum", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Alicuota")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("alicuota");

                    b.Property<int?>("Decimales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales")
                        .HasDefaultValueSql("'2'");

                    b.Property<int?>("DecimalesCosto")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales_costo");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<bool?>("IvaIncluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("iva_incluido")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("ListaPadre")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lista_padre");

                    b.Property<string>("Moneda")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("moneda");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<decimal?>("RedondeoGcia")
                        .HasPrecision(6, 4)
                        .HasColumnType("decimal(6,4)")
                        .HasColumnName("redondeo_gcia");

                    b.Property<decimal?>("RedondeoPvta")
                        .HasPrecision(6, 4)
                        .HasColumnType("decimal(6,4)")
                        .HasColumnName("redondeo_pvta");

                    b.Property<decimal?>("RedondeoTotal")
                        .HasPrecision(6, 4)
                        .HasColumnType("decimal(6,4)")
                        .HasColumnName("redondeo_total");

                    b.Property<string>("Round")
                        .HasColumnType("enum('ROUND','FLOOR','CEIL')")
                        .HasColumnName("round");

                    b.Property<bool?>("Visible")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("visible")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "ListaPadre" }, "lista_padre");

                    b.HasIndex(new[] { "Moneda" }, "moneda");

                    b.ToTable("stk_lista", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkPrecio", b =>
                {
                    b.Property<string>("Lista")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lista")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Item")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item")
                        .HasDefaultValueSql("''");

                    b.Property<decimal>("Cantidad")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("cantidad");

                    b.Property<decimal?>("Ajuste")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste");

                    b.Property<decimal?>("AjustePrecio")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ajuste_precio");

                    b.Property<decimal?>("Alicuota")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("alicuota");

                    b.Property<decimal?>("Aumento")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("aumento");

                    b.Property<string>("Calculo")
                        .HasColumnType("enum('UNIDAD','CANTIDAD','PRECIO')")
                        .HasColumnName("calculo");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<decimal?>("Ganancia")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("ganancia");

                    b.Property<string>("Moneda")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("moneda");

                    b.Property<decimal?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("precio")
                        .HasDefaultValueSql("'0.0000'");

                    b.Property<decimal?>("Preciovta")
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("preciovta");

                    b.HasKey("Lista", "Item", "Cantidad")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0 });

                    b.HasIndex(new[] { "Item" }, "item")
                        .HasDatabaseName("item1");

                    b.HasIndex(new[] { "Moneda" }, "moneda")
                        .HasDatabaseName("moneda1");

                    b.ToTable("stk_precio", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkSubgrupo", b =>
                {
                    b.Property<string>("Subgrupo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("subgrupo")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.HasKey("Subgrupo")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Grupo" }, "grupo")
                        .HasDatabaseName("grupo1");

                    b.ToTable("stk_subgrupo", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaAjuste", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Cantidad")
                        .HasPrecision(11, 4)
                        .HasColumnType("decimal(11,4)")
                        .HasColumnName("cantidad");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<decimal?>("Importe")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("importe");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<decimal?>("Porcentaje")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("porcentaje");

                    b.Property<string>("Tipo")
                        .HasColumnType("enum('COMPROBANTE','FACTURA','COBRO')")
                        .HasColumnName("tipo");

                    b.HasKey("Id");

                    b.ToTable("vta_ajuste", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaAjusteItem", b =>
                {
                    b.Property<string>("Tipo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("tipo")
                        .HasDefaultValueSql("''");

                    b.Property<string>("Comprobante")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("comprobante")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Linea")
                        .HasColumnType("int(11)")
                        .HasColumnName("linea");

                    b.Property<string>("Ajuste")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("ajuste")
                        .HasDefaultValueSql("''");

                    b.Property<decimal?>("Cantidad")
                        .HasPrecision(11, 4)
                        .HasColumnType("decimal(11,4)")
                        .HasColumnName("cantidad");

                    b.Property<decimal?>("Importe")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("importe");

                    b.Property<decimal?>("Porcentaje")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("porcentaje");

                    b.HasKey("Tipo", "Comprobante", "Linea", "Ajuste")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0, 0, 0 });

                    b.HasIndex(new[] { "Ajuste" }, "ajuste");

                    b.ToTable("vta_ajuste_item", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaCliente", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<string>("Actividad")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("actividad");

                    b.Property<decimal?>("Ajuste")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste");

                    b.Property<decimal?>("AjusteLista")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste_lista");

                    b.Property<decimal?>("AjusteListaN")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste_lista_n");

                    b.Property<decimal?>("AjusteN")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste_n");

                    b.Property<string>("AjusteTipo")
                        .HasColumnType("enum('PORCENTUAL','AUMENTO','GANANCIA','CONIVA','SINIVA')")
                        .HasColumnName("ajuste_tipo");

                    b.Property<string>("AjusteTipoN")
                        .HasColumnType("enum('PORCENTUAL','AUMENTO','GANANCIA','CONIVA','SINIVA')")
                        .HasColumnName("ajuste_tipo_n");

                    b.Property<ulong?>("Color")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasColumnName("color")
                        .HasDefaultValueSql("b'1'");

                    b.Property<decimal?>("ComisionCobro")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("comision_cobro");

                    b.Property<decimal?>("ComisionCobro1")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("comision_cobro$");

                    b.Property<decimal?>("ComisionVenta")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)")
                        .HasColumnName("comision_venta");

                    b.Property<decimal?>("ComisionVenta1")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("comision_venta$");

                    b.Property<string>("ComprobanteAdj")
                        .HasColumnType("enum('MANUAL','AUTOMATICO')")
                        .HasColumnName("comprobante_adj");

                    b.Property<string>("ComprobanteImp")
                        .HasColumnType("enum('MANUAL','AUTOMATICO')")
                        .HasColumnName("comprobante_imp");

                    b.Property<string>("CondicionIva")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("condicion_iva");

                    b.Property<string>("CondicionVenta")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("condicion_venta");

                    b.Property<string>("CondicionVentaN")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("condicion_venta_n");

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("contacto");

                    b.Property<string>("Cpa")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("cpa");

                    b.Property<DateOnly?>("CtacteFecha")
                        .HasColumnType("date")
                        .HasColumnName("ctacte_fecha");

                    b.Property<DateOnly?>("CtacteFechaN")
                        .HasColumnType("date")
                        .HasColumnName("ctacte_fecha_n");

                    b.Property<decimal?>("CtacteLimite")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ctacte_limite");

                    b.Property<decimal?>("CtacteLimiteN")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ctacte_limite_n");

                    b.Property<decimal?>("CtacteSaldo")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ctacte_saldo");

                    b.Property<decimal?>("CtacteSaldoN")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ctacte_saldo_n");

                    b.Property<string>("Destino")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("destino");

                    b.Property<string>("Direccion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("direccion");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateOnly?>("FechaAlta")
                        .HasColumnType("date")
                        .HasColumnName("fecha_alta");

                    b.Property<DateOnly?>("FechaBaja")
                        .HasColumnType("date")
                        .HasColumnName("fecha_baja");

                    b.Property<string>("FexIdimpositivo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("fex_idimpositivo");

                    b.Property<string>("Grupo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("grupo");

                    b.Property<decimal?>("Latitud")
                        .HasPrecision(17, 14)
                        .HasColumnType("decimal(17,14)")
                        .HasColumnName("latitud");

                    b.Property<string>("Letra")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("letra")
                        .IsFixedLength();

                    b.Property<string>("LetraN")
                        .HasMaxLength(1)
                        .HasColumnType("char(1)")
                        .HasColumnName("letra_n")
                        .IsFixedLength();

                    b.Property<string>("Lista")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lista");

                    b.Property<string>("Localidad")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("localidad");

                    b.Property<decimal?>("Longitud")
                        .HasPrecision(17, 14)
                        .HasColumnType("decimal(17,14)")
                        .HasColumnName("longitud");

                    b.Property<string>("Modelo")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("modelo");

                    b.Property<string>("ModeloAsiento")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("modelo_asiento");

                    b.Property<string>("ModeloAsientoCobro")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("modelo_asiento_cobro");

                    b.Property<string>("ModeloN")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("modelo_n");

                    b.Property<string>("Moneda")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("moneda");

                    b.Property<string>("NombreFantasia")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombre_fantasia");

                    b.Property<decimal?>("Nota")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("nota");

                    b.Property<string>("NumeroDocumento")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("numero_documento");

                    b.Property<string>("NumeroIb")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("numero_ib");

                    b.Property<string>("ObsFactura")
                        .HasColumnType("text")
                        .HasColumnName("obs_factura");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<string>("PagoElectronico")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pago_electronico");

                    b.Property<string>("Pais")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("pais");

                    b.Property<string>("Provincia")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("provincia");

                    b.Property<short?>("Punto")
                        .HasColumnType("smallint(5)")
                        .HasColumnName("punto");

                    b.Property<short?>("PuntoN")
                        .HasColumnType("smallint(5)")
                        .HasColumnName("punto_n");

                    b.Property<string>("RazonSocial")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("razon_social");

                    b.Property<string>("Rubro")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("rubro");

                    b.Property<string>("Telefono")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("telefono");

                    b.Property<string>("Tipo")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("tipo");

                    b.Property<string>("TipoDocumento")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("tipo_documento");

                    b.Property<string>("TipoN")
                        .HasMaxLength(4)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("tipo_n");

                    b.Property<string>("Trabajador")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("trabajador");

                    b.Property<string>("Transporte")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("transporte");

                    b.Property<string>("Webpage")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("webpage");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CondicionIva" }, "condicion_iva");

                    b.HasIndex(new[] { "CondicionVenta" }, "condicion_venta");

                    b.HasIndex(new[] { "CondicionVentaN" }, "condicion_venta_n");

                    b.HasIndex(new[] { "Destino" }, "destino");

                    b.HasIndex(new[] { "Lista" }, "lista");

                    b.HasIndex(new[] { "ModeloAsiento" }, "modelo_asiento");

                    b.HasIndex(new[] { "ModeloAsientoCobro" }, "modelo_asiento_cobro");

                    b.HasIndex(new[] { "Moneda" }, "moneda")
                        .HasDatabaseName("moneda2");

                    b.HasIndex(new[] { "Provincia" }, "provincia");

                    b.HasIndex(new[] { "Rubro" }, "rubro")
                        .HasDatabaseName("rubro1");

                    b.HasIndex(new[] { "Tipo", "Letra", "Modelo" }, "tipo");

                    b.HasIndex(new[] { "TipoN", "LetraN", "ModeloN" }, "tipo_n");

                    b.HasIndex(new[] { "Trabajador" }, "trabajador");

                    b.HasIndex(new[] { "Transporte" }, "transporte");

                    b.ToTable("vta_cliente", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaCombo", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Ajuste")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste");

                    b.Property<decimal?>("AjusteLista")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste_lista");

                    b.Property<string>("AjusteTipo")
                        .HasColumnType("enum('PORCENTUAL','AUMENTO','GANANCIA','CONIVA','SINIVA')")
                        .HasColumnName("ajuste_tipo");

                    b.Property<decimal?>("Cotizacion")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)")
                        .HasColumnName("cotizacion")
                        .HasDefaultValueSql("'1.000'");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<decimal?>("Exento")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("exento");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date")
                        .HasColumnName("fecha");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("blob")
                        .HasColumnName("foto");

                    b.Property<string>("Grupo")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("grupo");

                    b.Property<decimal?>("Iva")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("iva");

                    b.Property<string>("Lista")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("lista");

                    b.Property<string>("Moneda")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("moneda");

                    b.Property<decimal?>("Neto")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("neto");

                    b.Property<decimal?>("Nogravado")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("nogravado");

                    b.Property<string>("Observaciones")
                        .HasColumnType("text")
                        .HasColumnName("observaciones");

                    b.Property<int?>("Orden")
                        .HasColumnType("int(11)")
                        .HasColumnName("orden");

                    b.Property<decimal?>("Total")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)")
                        .HasColumnName("total");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Lista" }, "lista")
                        .HasDatabaseName("lista1");

                    b.HasIndex(new[] { "Moneda" }, "moneda")
                        .HasDatabaseName("moneda3");

                    b.ToTable("vta_combo", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaComboItem", b =>
                {
                    b.Property<string>("Combo")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("combo")
                        .HasDefaultValueSql("''");

                    b.Property<int>("Linea")
                        .HasColumnType("int(11)")
                        .HasColumnName("linea");

                    b.Property<decimal?>("Ajuste")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("ajuste");

                    b.Property<decimal?>("AjusteIva")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ajuste_iva");

                    b.Property<decimal?>("AjusteNeto")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("ajuste_neto");

                    b.Property<decimal?>("Alicuota")
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("alicuota");

                    b.Property<decimal?>("Cantidad")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11, 4)
                        .HasColumnType("decimal(11,4)")
                        .HasColumnName("cantidad")
                        .HasDefaultValueSql("'0.0000'");

                    b.Property<decimal?>("Cotizacion")
                        .HasPrecision(9, 3)
                        .HasColumnType("decimal(9,3)")
                        .HasColumnName("cotizacion");

                    b.Property<int?>("Decimales")
                        .HasColumnType("int(1)")
                        .HasColumnName("decimales");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1024)
                        .HasColumnType("varchar(1024)")
                        .HasColumnName("descripcion");

                    b.Property<decimal?>("Importe")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("importe")
                        .HasDefaultValueSql("'0.00'");

                    b.Property<string>("Item")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("item");

                    b.Property<decimal?>("Iva")
                        .HasPrecision(11, 2)
                        .HasColumnType("decimal(11,2)")
                        .HasColumnName("iva");

                    b.Property<bool?>("Ivainc")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("ivainc");

                    b.Property<string>("Moneda")
                        .HasMaxLength(5)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("moneda");

                    b.Property<decimal?>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(12, 4)
                        .HasColumnType("decimal(12,4)")
                        .HasColumnName("precio")
                        .HasDefaultValueSql("'0.0000'");

                    b.HasKey("Combo", "Linea")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "Item" }, "item")
                        .HasDatabaseName("item2");

                    b.HasIndex(new[] { "Moneda" }, "moneda")
                        .HasDatabaseName("moneda4");

                    b.ToTable("vta_combo_item", (string)null);
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkExistencium", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkItem", "ItemNavigation")
                        .WithMany("StkExistencia")
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("stk_existencia_ibfk_2");

                    b.Navigation("ItemNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkFormula", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkItem", "ComponenteNavigation")
                        .WithMany("StkFormulaComponenteNavigations")
                        .HasForeignKey("Componente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("stk_formula_ibfk_2");

                    b.HasOne("TechPartsWebSite.Entities.StkItem", "ItemNavigation")
                        .WithMany("StkFormulaItemNavigations")
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("stk_formula_ibfk_1");

                    b.Navigation("ComponenteNavigation");

                    b.Navigation("ItemNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkItem", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkFamilium", "FamiliaNavigation")
                        .WithMany("StkItems")
                        .HasForeignKey("Familia")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("stk_item_ibfk_3");

                    b.HasOne("TechPartsWebSite.Entities.StkGrupo", "GrupoNavigation")
                        .WithMany("StkItems")
                        .HasForeignKey("Grupo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("stk_item_ibfk_1");

                    b.HasOne("TechPartsWebSite.Entities.StkSubgrupo", "SubgrupoNavigation")
                        .WithMany("StkItems")
                        .HasForeignKey("Subgrupo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("stk_item_ibfk_2");

                    b.Navigation("FamiliaNavigation");

                    b.Navigation("GrupoNavigation");

                    b.Navigation("SubgrupoNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkListum", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkListum", "ListaPadreNavigation")
                        .WithMany("InverseListaPadreNavigation")
                        .HasForeignKey("ListaPadre")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("stk_lista_ibfk_2");

                    b.Navigation("ListaPadreNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkPrecio", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkItem", "ItemNavigation")
                        .WithMany("StkPrecios")
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("stk_precio_ibfk_2");

                    b.HasOne("TechPartsWebSite.Entities.StkListum", "ListaNavigation")
                        .WithMany("StkPrecios")
                        .HasForeignKey("Lista")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("stk_precio_ibfk_1");

                    b.Navigation("ItemNavigation");

                    b.Navigation("ListaNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkSubgrupo", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkGrupo", "GrupoNavigation")
                        .WithMany("StkSubgrupos")
                        .HasForeignKey("Grupo")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("stk_subgrupo_ibfk_1");

                    b.Navigation("GrupoNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaAjusteItem", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.VtaAjuste", "AjusteNavigation")
                        .WithMany("VtaAjusteItems")
                        .HasForeignKey("Ajuste")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("vta_ajuste_item_ibfk_2");

                    b.Navigation("AjusteNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaCliente", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkListum", "ListaNavigation")
                        .WithMany("VtaClientes")
                        .HasForeignKey("Lista")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("vta_cliente_ibfk_6");

                    b.Navigation("ListaNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaCombo", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.StkListum", "ListaNavigation")
                        .WithMany("VtaCombos")
                        .HasForeignKey("Lista")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("vta_combo_ibfk_2");

                    b.Navigation("ListaNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaComboItem", b =>
                {
                    b.HasOne("TechPartsWebSite.Entities.VtaCombo", "ComboNavigation")
                        .WithMany("VtaComboItems")
                        .HasForeignKey("Combo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("vta_combo_item_ibfk_1");

                    b.HasOne("TechPartsWebSite.Entities.StkItem", "ItemNavigation")
                        .WithMany("VtaComboItems")
                        .HasForeignKey("Item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("vta_combo_item_ibfk_2");

                    b.Navigation("ComboNavigation");

                    b.Navigation("ItemNavigation");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkFamilium", b =>
                {
                    b.Navigation("StkItems");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkGrupo", b =>
                {
                    b.Navigation("StkItems");

                    b.Navigation("StkSubgrupos");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkItem", b =>
                {
                    b.Navigation("StkExistencia");

                    b.Navigation("StkFormulaComponenteNavigations");

                    b.Navigation("StkFormulaItemNavigations");

                    b.Navigation("StkPrecios");

                    b.Navigation("VtaComboItems");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkListum", b =>
                {
                    b.Navigation("InverseListaPadreNavigation");

                    b.Navigation("StkPrecios");

                    b.Navigation("VtaClientes");

                    b.Navigation("VtaCombos");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.StkSubgrupo", b =>
                {
                    b.Navigation("StkItems");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaAjuste", b =>
                {
                    b.Navigation("VtaAjusteItems");
                });

            modelBuilder.Entity("TechPartsWebSite.Entities.VtaCombo", b =>
                {
                    b.Navigation("VtaComboItems");
                });
#pragma warning restore 612, 618
        }
    }
}
